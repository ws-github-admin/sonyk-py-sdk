# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .login_response_data_default_organization import LoginResponseDataDefaultOrganization
from .login_response_data_tokens import LoginResponseDataTokens
from .organization_membership import OrganizationMembership
from .user_profile import UserProfile


class LoginResponseData(UniversalBaseModel):
    user: typing.Optional[UserProfile] = None
    default_organization: typing_extensions.Annotated[
        typing.Optional[LoginResponseDataDefaultOrganization], FieldMetadata(alias="defaultOrganization")
    ] = None
    all_organizations: typing_extensions.Annotated[
        typing.Optional[typing.List[OrganizationMembership]], FieldMetadata(alias="allOrganizations")
    ] = None
    tokens: typing.Optional[LoginResponseDataTokens] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
