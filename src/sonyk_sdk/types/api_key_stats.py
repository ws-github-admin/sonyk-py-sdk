# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ApiKeyStats(UniversalBaseModel):
    total_keys: typing.Optional[int] = pydantic.Field(default=None)
    """
    Total number of API keys
    """

    active_keys: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of active API keys
    """

    total_usage: typing.Optional[int] = pydantic.Field(default=None)
    """
    Total usage count across all keys
    """

    expired_keys: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of expired API keys
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
