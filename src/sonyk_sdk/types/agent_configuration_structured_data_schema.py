# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .agent_configuration_structured_data_schema_call_type import AgentConfigurationStructuredDataSchemaCallType


class AgentConfigurationStructuredDataSchema(UniversalBaseModel):
    tags: typing.List[str]
    call_type: AgentConfigurationStructuredDataSchemaCallType
    call_summary: str
    send_menu_dish_sms: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="sendMenuDishSMS")] = (
        None
    )
    reason_of_call_transfer: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="reasonOfCallTransfer")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
