# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class PaginatedResponseMetaPagination(UniversalBaseModel):
    current_page: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="currentPage")] = (
        pydantic.Field(default=None)
    )
    """
    Current page number
    """

    total_pages: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="totalPages")] = pydantic.Field(
        default=None
    )
    """
    Total number of pages
    """

    total_items: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="totalItems")] = pydantic.Field(
        default=None
    )
    """
    Total number of items
    """

    items_per_page: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="itemsPerPage")] = (
        pydantic.Field(default=None)
    )
    """
    Number of items per page
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
